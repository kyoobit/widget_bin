alias oneliners='cat $HOME/repos/widget_bin/oneliners.txt';

crontab (but you know you should use systemd timers instead)
# .------------- minute (0 - 59) */10 == every ten minutes
# |  .---------- hour (0 - 23)
# |  |  .------- day of month (1 - 31)
# |  |  |  .---- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .- day of week (0 - 6) (Sunday=0 or 7) 
# |  |  |  |  |  -or- sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |  TEST: env > ~/cronenv; env - `cat ~/cronenv` /bin/sh
# *  *  *  *  *  <command to be executed> 2>&1 >> <always log>

echo "send a message" | wall

## Gherkin issue template
**As a** [role]
**I need** [function]
**So that** [benefit]

### Details and Assumptions
* [document what you know]

### Acceptance Criteria

```gherkin
Given [some context]
When [certain action is taken]
Then [the outcome of action is observed]
```

## Git branch and merge cycle
git clone <url>
git checkout main
git pull
git checkout -b <branch name>
  feature/<feature-id>/<description>
  fix/<issue-id>/<description>
  release/<release-string>
git merge main
  ...work, work, whoops ...
git reset --soft (keeps local changes)
git reset --hard (destructive to last commit)
git checkout . (????)
  ...work, work, work ...
git status
git add <files>
git commit -m '<a useful message>'
git push -u origin <branch name>
  ...follow open pull request instructions...
git checkout main
git pull
git branch -d <branch name>

ping -q -s 1472 -M do -c 10 <ADDRESS>
sudo -iu root ping -q -s 1472 -M do -i .01 -c 2000 <ADDRESS>
ping: -s size MTU minus 28 for IPv4 or MTU minus 48 for IPv6
ping: -M do = prohibit fragmentation
nping --tcp-connect --dest-port 80 --count 100 --delay 100ms <ADDRESS>

netstat -nP -iTCP
netstat -anv | grep <PORT>
ps -Ao user,pid,command | grep -v grep | grep <PID>

ssh -L <PORT>:localhost:<PORT> -N -l <USER> <HOST|ADDRESS>

sudo -iu root tcpdump -nnvvS net <ADDRESS> and src not <ADDRESS> and not <ADDRESS>

## tar pipe:
[ -d ${SOURCE} -a ! ${SOURCE} -ef ${TARGET} ]; tar cf - ${SOURCE} | (cd ${TARGET}; tar xvf -)

tmux new-session -d -s '<SESSION NAME>' '<COMMAND(S) TO RUN>'
tmux new-session -s 'tri-panel' \; split-window -h -p 66 \; split-window -h \;

## top oneshot sorted by RES memory
top -b -n 1 -o +RES -E m -e m

